{"version":3,"sources":["images/pollution.jpg","components/PrimaryButton.js","components/CitySelect.js","components/ListElement.js","App.js","index.js"],"names":["module","exports","PrimaryButton","buttonTxt","func","Button","className","onClick","variant","color","Asynchronous","labelTxt","React","useState","open","setOpen","options","setOptions","loading","length","useEffect","active","a","fetch","response","json","countries","results","Autocomplete","id","style","width","onChange","onOpen","onClose","getOptionLabel","option","city","renderInput","params","TextField","label","fullWidth","InputProps","endAdornment","Fragment","CircularProgress","size","ListWrapper","styled","ul","warning","fontWeight","safe","ListElement","cityDetails","isclicked","listItem","map","item","key","location","parameter","Date","date","local","toLocaleDateString","value","unit","Array","isArray","GlobalStyle","createGlobalStyle","AppWrapper","div","Background","InputWrapper","App","setCity","setCityDetails","setLoading","setisclicked","input","document","getElementById","showCityDetails","data","setTimeout","position","margin","ReactDOM","render"],"mappings":"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","file":"static/js/main.b15eb5ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pollution.fe68b692.jpg\";","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst PrimaryButton = ({ buttonTxt, func }) => {\r\n    return (\r\n\r\n        <Button className='detailButton' onClick={func} variant=\"contained\" color=\"default\">\r\n            {buttonTxt}\r\n        </Button>\r\n\r\n    )\r\n}\r\n\r\nexport default PrimaryButton\r\n","import React from 'react'\r\n\r\n// dependencies\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n// component\r\nexport default function Asynchronous({ func, labelTxt }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n        (async () => {\r\n            const response = await fetch('https://api.openaq.org/v1/cities?country=PL&limit=200');\r\n            const countries = await response.json();\r\n\r\n            if (active) {\r\n                setOptions(countries.results);\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"country-select\"\r\n            style={{ width: 300 }}\r\n            onChange={func}\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            getOptionLabel={option => option.city}\r\n            options={options}\r\n            loading={loading}\r\n            renderInput={params => (\r\n                <TextField\r\n                    {...params}\r\n                    label={labelTxt}\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <React.Fragment>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}","import React from 'react'\r\n\r\n// dependencies\r\nimport styled from 'styled-components'\r\n\r\n// STYLES --------------------------------\r\nconst ListWrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    margin-top: 50px;\r\n    padding-inline-start: 0px;\r\n\r\n    @media (max-width: 450px) {\r\n        margin-top: 120px;\r\n        width: 90%;\r\n  }\r\n    li{\r\n        margin: 5px;\r\n        list-style: none;\r\n        padding: 10px 30px;\r\n        background: #e0e0e0;\r\n        box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12);\r\n        border: none;\r\n        padding: 16px;\r\n        font-size: 1rem;\r\n        border-radius: 4px;\r\n        animation: fadeIn .3s ease-out;\r\n        .border{\r\n            border-bottom: 1px solid;\r\n        }\r\n    }\r\n\r\n    @keyframes fadeIn {\r\n        from{\r\n            opacity: 0;\r\n            transform: translateY(12px);\r\n        }\r\n        to{\r\n            opacity: 1;\r\n            transform: translateY(0px);\r\n            }\r\n    }\r\n`\r\nconst warning = {\r\n    color: 'red',\r\n    fontWeight: 'bold'\r\n\r\n}\r\n\r\nconst safe = {\r\n    color: 'green',\r\n    fontWeight: 'bold'\r\n}\r\n\r\n// component\r\nconst ListElement = ({ cityDetails, isclicked }) => {\r\n\r\n\r\n    const listItem = cityDetails.map(item =>\r\n        < li key={item.location}>\r\n            <p>badany parametr: stężenie pyłów zawieszonych {item.parameter}</p>\r\n            <p>punkt pomiaru: {item.location}</p>\r\n            <p>data pomiaru: {new Date(item.date.local).toLocaleDateString()}</p>\r\n            <p style={item.value > 50 ? warning : safe}>wynik pomiaru: {item.value} {item.unit}</p>\r\n            <p>poziom dopuszczalny: 50 µg/m3 (dobowy);</p>\r\n            <div className=\"border\"></div>\r\n            {item.value > 50 ? <p style={item.value > 50 ? warning : safe}>!!! stężenie pyłów przekracza dopuszczalną wartość, lepiej zostać w domu</p> : <p style={item.value > 50 ? warning : safe}>jakość powietrza w normie, możesz swobodnie wyjść na zewnątrz</p>}\r\n        </li >\r\n    )\r\n\r\n    return (\r\n        <ListWrapper>\r\n            {Array.isArray(cityDetails) && cityDetails.length === 0 && isclicked ?\r\n                <li>\r\n                    <p>brak danych z wybranej lokalizacji</p>\r\n                </li>\r\n\r\n                : listItem}\r\n        </ListWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default ListElement\r\n","\nimport React, { useState, useEffect } from 'react'\nimport { createGlobalStyle } from 'styled-components'\n\n// components\nimport PrimaryButton from './components/PrimaryButton'\nimport CitySelect from './components/CitySelect'\nimport ListElement from './components/ListElement'\n\n// dependencies\nimport styled from 'styled-components'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Particles from 'react-particles-js'\n\n// images\nimport Background from './images/pollution.jpg'\n\n\n// STYLES --------------------------------\n\n// global styles\nconst GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  p{\n    padding: 5px;\n  }\n`\n\n// main app wrapper style\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  background-image: url(${Background});\n  background-position: center;\n  height: 100vh;\n  background-size: cover;\n`\n\n// input section wrapper style\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  height: 60px;\n  button{\n    padding: 16px;\n  }\n\n  @media (max-width: 450px) {\n    flex-direction: column;\n    .detailButton{\n      margin-top: 20px;\n    }\n  }\n`\n\n//  APP --------------------------------\n\nconst App = () => {\n\n  // initial states\n  const [city, setCity] = useState('')\n  const [cityDetails, setCityDetails] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [isclicked, setisclicked] = useState(false)\n\n  // useEffect Hook to set city state\n  useEffect(() => {\n    const input = document.getElementById('country-select')\n    setCity(input.value)\n  }, [city])\n\n  // set city details\n  const showCityDetails = async () => {\n    setLoading(true)\n    const response = await fetch(`https://api.openaq.org/v1/measurements?country=PL&parameter=pm10&city=${city}&order_by=date&sort=desc&limit=1`)\n    const data = await response.json()\n    setCityDetails(data.results)\n    setisclicked(true)\n    setTimeout(() => {\n      setLoading(false)\n\n    }, 500)\n  }\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <AppWrapper>\n        <Particles\n          style={{\n            position: 'absolute'\n          }}\n          params={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 160,\n                \"density\": {\n                  \"enable\": false\n                }\n              },\n              \"size\": {\n                \"value\": 3,\n                \"random\": true,\n                \"anim\": {\n                  \"speed\": 4,\n                  \"size_min\": 0.3\n                }\n              },\n              \"line_linked\": {\n                \"enable\": false\n              },\n              \"move\": {\n                \"random\": true,\n                \"speed\": .4,\n                \"direction\": \"top\",\n                \"out_mode\": \"out\"\n              }\n            },\n            \"interactivity\": {\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"bubble\"\n                },\n                \"onclick\": {\n                  \"enable\": false,\n                  \"mode\": \"repulse\"\n                }\n              },\n              \"modes\": {\n                \"bubble\": {\n                  \"distance\": 250,\n                  \"duration\": 2,\n                  \"size\": 0,\n                  \"opacity\": 0\n                },\n                \"repulse\": {\n                  \"distance\": 400,\n                  \"duration\": 4\n                }\n              }\n            }\n          }} />\n        <InputWrapper>\n          <CitySelect labelTxt='Wybierz miasto' func={setCity} />\n          <PrimaryButton func={city ? showCityDetails : null} buttonTxt='sprawdź aktualny pomiar' />\n        </InputWrapper>\n        {loading ? <CircularProgress style={{ margin: '50px auto', }} size='100px' /> : <ListElement cityDetails={cityDetails} isclicked={isclicked} />}\n      </AppWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}